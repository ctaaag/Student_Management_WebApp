import {
  BASE_OPTION_DEFAULTS,
  BASE_OPTION_REFINERS,
  BaseComponent,
  BgEvent,
  CalendarApi,
  CalendarContent,
  CalendarDataManager,
  CalendarDataProvider,
  CalendarRoot,
  Component,
  ContentHook,
  CustomContentRenderContext,
  DateComponent,
  DateEnv,
  DateProfileGenerator,
  DayCellContent,
  DayCellRoot,
  DayHeader,
  DaySeriesModel,
  DayTableModel,
  DelayedRunner,
  ElementDragging,
  ElementScrollController,
  Emitter,
  EventApi,
  EventRoot,
  EventSourceApi,
  Fragment,
  Interaction,
  MoreLinkRoot,
  MountHook,
  NamedTimeZoneImpl,
  NowIndicatorRoot,
  NowTimer,
  PositionCache,
  RefMap,
  RenderHook,
  ScrollController,
  ScrollResponder,
  Scroller,
  SegHierarchy,
  SimpleScrollGrid,
  Slicer,
  Splitter,
  StandardEvent,
  TableDateCell,
  TableDowCell,
  Theme,
  ViewApi,
  ViewContextType,
  ViewRoot,
  WeekNumberRoot,
  WindowScrollController,
  __assign,
  __extends,
  addDays,
  addDurations,
  addMs,
  addWeeks,
  allowContextMenu,
  allowSelection,
  applyMutationToEventStore,
  applyStyle,
  applyStyleProp,
  asCleanDays,
  asRoughMinutes,
  asRoughMs,
  asRoughSeconds,
  binarySearch,
  buildClassNameNormalizer,
  buildEntryKey,
  buildEventApis,
  buildEventRangeKey,
  buildHashFromArray,
  buildIsoString,
  buildNavLinkAttrs,
  buildSegCompareObj,
  buildSegTimeText,
  collectFromHash,
  combineEventUis,
  compareByFieldSpec,
  compareByFieldSpecs,
  compareNumbers,
  compareObjs,
  computeEarliestSegStart,
  computeEdges,
  computeFallbackHeaderFormat,
  computeHeightAndMargins,
  computeInnerRect,
  computeRect,
  computeSegDraggable,
  computeSegEndResizable,
  computeSegStartResizable,
  computeShrinkWidth,
  computeSmallestCellWidth,
  computeVisibleDayRange,
  config,
  constrainPoint,
  createAriaClickAttrs,
  createContext,
  createDuration,
  createElement,
  createEmptyEventStore,
  createEventInstance,
  createEventUi,
  createFormatter,
  createPlugin,
  createPortal,
  createRef,
  diffDates,
  diffDayAndTime,
  diffDays,
  diffPoints,
  diffWeeks,
  diffWholeDays,
  diffWholeWeeks,
  disableCursor,
  elementClosest,
  elementMatches,
  enableCursor,
  eventTupleToStore,
  filterEventStoreDefs,
  filterHash,
  findDirectChildren,
  findElements,
  flexibleCompare,
  flushSync,
  formatDate,
  formatDayString,
  formatIsoTimeString,
  formatRange,
  getAllowYScrolling,
  getCanVGrowWithinCell,
  getClippingParents,
  getDateMeta,
  getDayClassNames,
  getDefaultEventEnd,
  getElRoot,
  getElSeg,
  getEntrySpanEnd,
  getEventClassNames,
  getEventTargetViaRoot,
  getIsRtlScrollbarOnLeft,
  getRectCenter,
  getRelevantEvents,
  getScrollGridClassNames,
  getScrollbarWidths,
  getSectionClassNames,
  getSectionHasLiquidHeight,
  getSegAnchorAttrs,
  getSegMeta,
  getSlotClassNames,
  getStickyFooterScrollbar,
  getStickyHeaderDates,
  getUnequalProps,
  getUniqueDomId,
  globalLocales,
  globalPlugins,
  greatestDurationDenominator,
  groupIntersectingEntries,
  guid,
  hasBgRendering,
  hasShrinkWidth,
  identity,
  interactionSettingsStore,
  interactionSettingsToStore,
  intersectRanges,
  intersectRects,
  intersectSpans,
  isArraysEqual,
  isColPropsEqual,
  isDateSelectionValid,
  isDateSpansEqual,
  isInt,
  isInteractionValid,
  isMultiDayRange,
  isPropsEqual,
  isPropsValid,
  isValidDate,
  joinSpans,
  listenBySelector,
  mapHash,
  memoize,
  memoizeArraylike,
  memoizeHashlike,
  memoizeObjArg,
  mergeEventStores,
  multiplyDuration,
  padStart,
  parse,
  parseBusinessHours,
  parseClassNames,
  parseDragMeta,
  parseEventDef,
  parseFieldSpecs,
  pointInsideRect,
  preventContextMenu,
  preventDefault,
  preventSelection,
  rangeContainsMarker,
  rangeContainsRange,
  rangesEqual,
  rangesIntersect,
  refineEventDef,
  refineProps,
  removeElement,
  removeExact,
  render,
  renderChunkContent,
  renderFill,
  renderMicroColGroup,
  renderScrollShim,
  requestJson,
  sanitizeShrinkWidth,
  setElSeg,
  setRef,
  sliceEventStore,
  sliceEvents,
  sortEventSegs,
  startOfDay,
  translateRect,
  triggerDateSelect,
  unmountComponentAtNode,
  unpromisify,
  version,
  whenTransitionDone,
  wholeDivideDurations
} from "./chunk-VLSRPJFT.js";
import {
  A,
  D,
  S,
  _,
  d,
  l,
  p,
  v
} from "./chunk-KZWRK35P.js";
import "./chunk-6DBBYCL5.js";

// node_modules/preact/compat/dist/compat.module.js
function C(n, t) {
  for (var e in t)
    n[e] = t[e];
  return n;
}
function S2(n, t) {
  for (var e in n)
    if (e !== "__source" && !(e in t))
      return true;
  for (var r in t)
    if (r !== "__source" && n[r] !== t[r])
      return true;
  return false;
}
function E(n) {
  this.props = n;
}
(E.prototype = new _()).isPureReactComponent = true, E.prototype.shouldComponentUpdate = function(n, t) {
  return S2(this.props, n) || S2(this.state, t);
};
var w = l.__b;
l.__b = function(n) {
  n.type && n.type.__f && n.ref && (n.props.ref = n.ref, n.ref = null), w && w(n);
};
var R = typeof Symbol != "undefined" && Symbol.for && Symbol.for("react.forward_ref") || 3911;
var A3 = l.__e;
l.__e = function(n, t, e, r) {
  if (n.then) {
    for (var u, o = t; o = o.__; )
      if ((u = o.__c) && u.__c)
        return t.__e == null && (t.__e = e.__e, t.__k = e.__k), u.__c(n, t);
  }
  A3(n, t, e, r);
};
var O = l.unmount;
function L() {
  this.__u = 0, this.t = null, this.__b = null;
}
function U(n) {
  var t = n.__.__c;
  return t && t.__e && t.__e(n);
}
function M() {
  this.u = null, this.o = null;
}
l.unmount = function(n) {
  var t = n.__c;
  t && t.__R && t.__R(), t && n.__h === true && (n.type = null), O && O(n);
}, (L.prototype = new _()).__c = function(n, t) {
  var e = t.__c, r = this;
  r.t == null && (r.t = []), r.t.push(e);
  var u = U(r.__v), o = false, i = function() {
    o || (o = true, e.__R = null, u ? u(l2) : l2());
  };
  e.__R = i;
  var l2 = function() {
    if (!--r.__u) {
      if (r.state.__e) {
        var n2 = r.state.__e;
        r.__v.__k[0] = function n3(t3, e2, r2) {
          return t3 && (t3.__v = null, t3.__k = t3.__k && t3.__k.map(function(t4) {
            return n3(t4, e2, r2);
          }), t3.__c && t3.__c.__P === e2 && (t3.__e && r2.insertBefore(t3.__e, t3.__d), t3.__c.__e = true, t3.__c.__P = r2)), t3;
        }(n2, n2.__c.__P, n2.__c.__O);
      }
      var t2;
      for (r.setState({ __e: r.__b = null }); t2 = r.t.pop(); )
        t2.forceUpdate();
    }
  }, f = t.__h === true;
  r.__u++ || f || r.setState({ __e: r.__b = r.__v.__k[0] }), n.then(i, i);
}, L.prototype.componentWillUnmount = function() {
  this.t = [];
}, L.prototype.render = function(n, t) {
  if (this.__b) {
    if (this.__v.__k) {
      var e = document.createElement("div"), r = this.__v.__k[0].__c;
      this.__v.__k[0] = function n2(t2, e2, r2) {
        return t2 && (t2.__c && t2.__c.__H && (t2.__c.__H.__.forEach(function(n3) {
          typeof n3.__c == "function" && n3.__c();
        }), t2.__c.__H = null), (t2 = C({}, t2)).__c != null && (t2.__c.__P === r2 && (t2.__c.__P = e2), t2.__c = null), t2.__k = t2.__k && t2.__k.map(function(t3) {
          return n2(t3, e2, r2);
        })), t2;
      }(this.__b, e, r.__O = r.__P);
    }
    this.__b = null;
  }
  var u = t.__e && v(d, null, n.fallback);
  return u && (u.__h = null), [v(d, null, t.__e ? null : n.children), u];
};
var T2 = function(n, t, e) {
  if (++e[1] === e[0] && n.o.delete(t), n.props.revealOrder && (n.props.revealOrder[0] !== "t" || !n.o.size))
    for (e = n.u; e; ) {
      for (; e.length > 3; )
        e.pop()();
      if (e[1] < e[0])
        break;
      n.u = e = e[2];
    }
};
function D2(n) {
  return this.getChildContext = function() {
    return n.context;
  }, n.children;
}
function I(n) {
  var t = this, e = n.i;
  t.componentWillUnmount = function() {
    S(null, t.l), t.l = null, t.i = null;
  }, t.i && t.i !== e && t.componentWillUnmount(), n.__v ? (t.l || (t.i = e, t.l = { nodeType: 1, parentNode: e, childNodes: [], appendChild: function(n2) {
    this.childNodes.push(n2), t.i.appendChild(n2);
  }, insertBefore: function(n2, e2) {
    this.childNodes.push(n2), t.i.appendChild(n2);
  }, removeChild: function(n2) {
    this.childNodes.splice(this.childNodes.indexOf(n2) >>> 1, 1), t.i.removeChild(n2);
  } }), S(v(D2, { context: t.context }, n.__v), t.l)) : t.l && t.componentWillUnmount();
}
function W(n, t) {
  var e = v(I, { __v: n, i: t });
  return e.containerInfo = t, e;
}
(M.prototype = new _()).__e = function(n) {
  var t = this, e = U(t.__v), r = t.o.get(n);
  return r[0]++, function(u) {
    var o = function() {
      t.props.revealOrder ? (r.push(u), T2(t, n, r)) : u();
    };
    e ? e(o) : o();
  };
}, M.prototype.render = function(n) {
  this.u = null, this.o = /* @__PURE__ */ new Map();
  var t = A(n.children);
  n.revealOrder && n.revealOrder[0] === "b" && t.reverse();
  for (var e = t.length; e--; )
    this.o.set(t[e], this.u = [1, 0, this.u]);
  return n.children;
}, M.prototype.componentDidUpdate = M.prototype.componentDidMount = function() {
  var n = this;
  this.o.forEach(function(t, e) {
    T2(n, e, t);
  });
};
var P = typeof Symbol != "undefined" && Symbol.for && Symbol.for("react.element") || 60103;
var V = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|marker(?!H|W|U)|overline|paint|shape|stop|strikethrough|stroke|text(?!L)|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;
var $ = typeof document != "undefined";
var j = function(n) {
  return (typeof Symbol != "undefined" && typeof Symbol() == "symbol" ? /fil|che|rad/i : /fil|che|ra/i).test(n);
};
_.prototype.isReactComponent = {}, ["componentWillMount", "componentWillReceiveProps", "componentWillUpdate"].forEach(function(n) {
  Object.defineProperty(_.prototype, n, { configurable: true, get: function() {
    return this["UNSAFE_" + n];
  }, set: function(t) {
    Object.defineProperty(this, n, { configurable: true, writable: true, value: t });
  } });
});
var H = l.event;
function Z() {
}
function Y() {
  return this.cancelBubble;
}
function q3() {
  return this.defaultPrevented;
}
l.event = function(n) {
  return H && (n = H(n)), n.persist = Z, n.isPropagationStopped = Y, n.isDefaultPrevented = q3, n.nativeEvent = n;
};
var G;
var J = { configurable: true, get: function() {
  return this.class;
} };
var K = l.vnode;
l.vnode = function(n) {
  var t = n.type, e = n.props, r = e;
  if (typeof t == "string") {
    var u = t.indexOf("-") === -1;
    for (var o in r = {}, e) {
      var i = e[o];
      $ && o === "children" && t === "noscript" || o === "value" && "defaultValue" in e && i == null || (o === "defaultValue" && "value" in e && e.value == null ? o = "value" : o === "download" && i === true ? i = "" : /ondoubleclick/i.test(o) ? o = "ondblclick" : /^onchange(textarea|input)/i.test(o + t) && !j(e.type) ? o = "oninput" : /^onfocus$/i.test(o) ? o = "onfocusin" : /^onblur$/i.test(o) ? o = "onfocusout" : /^on(Ani|Tra|Tou|BeforeInp|Compo)/.test(o) ? o = o.toLowerCase() : u && V.test(o) ? o = o.replace(/[A-Z0-9]/, "-$&").toLowerCase() : i === null && (i = void 0), /^oninput$/i.test(o) && (o = o.toLowerCase(), r[o] && (o = "oninputCapture")), r[o] = i);
    }
    t == "select" && r.multiple && Array.isArray(r.value) && (r.value = A(e.children).forEach(function(n2) {
      n2.props.selected = r.value.indexOf(n2.props.value) != -1;
    })), t == "select" && r.defaultValue != null && (r.value = A(e.children).forEach(function(n2) {
      n2.props.selected = r.multiple ? r.defaultValue.indexOf(n2.props.value) != -1 : r.defaultValue == n2.props.value;
    })), n.props = r, e.class != e.className && (J.enumerable = "className" in e, e.className != null && (r.class = e.className), Object.defineProperty(r, "className", J));
  }
  n.$$typeof = P, K && K(n);
};
var Q = l.__r;
l.__r = function(n) {
  Q && Q(n), G = n.__c;
};

// node_modules/@fullcalendar/core/vdom.js
var globalObj = typeof globalThis !== "undefined" ? globalThis : window;
if (globalObj.FullCalendarVDom) {
  console.warn("FullCalendar VDOM already loaded");
} else {
  globalObj.FullCalendarVDom = {
    Component: _,
    createElement: v,
    render: S,
    createRef: p,
    Fragment: d,
    createContext: createContext2,
    createPortal: W,
    flushSync: flushSync2,
    unmountComponentAtNode: unmountComponentAtNode2
  };
}
function flushSync2(runBeforeFlush) {
  runBeforeFlush();
  var oldDebounceRendering = l.debounceRendering;
  var callbackQ = [];
  function execCallbackSync(callback) {
    callbackQ.push(callback);
  }
  l.debounceRendering = execCallbackSync;
  S(v(FakeComponent, {}), document.createElement("div"));
  while (callbackQ.length) {
    callbackQ.shift()();
  }
  l.debounceRendering = oldDebounceRendering;
}
var FakeComponent = function(_super) {
  __extends(FakeComponent2, _super);
  function FakeComponent2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  FakeComponent2.prototype.render = function() {
    return v("div", {});
  };
  FakeComponent2.prototype.componentDidMount = function() {
    this.setState({});
  };
  return FakeComponent2;
}(_);
function createContext2(defaultValue) {
  var ContextType = D(defaultValue);
  var origProvider = ContextType.Provider;
  ContextType.Provider = function() {
    var _this = this;
    var isNew = !this.getChildContext;
    var children = origProvider.apply(this, arguments);
    if (isNew) {
      var subs_1 = [];
      this.shouldComponentUpdate = function(_props) {
        if (_this.props.value !== _props.value) {
          subs_1.forEach(function(c) {
            c.context = _props.value;
            c.forceUpdate();
          });
        }
      };
      this.sub = function(c) {
        subs_1.push(c);
        var old = c.componentWillUnmount;
        c.componentWillUnmount = function() {
          subs_1.splice(subs_1.indexOf(c), 1);
          old && old.call(c);
        };
      };
    }
    return children;
  };
  return ContextType;
}
function unmountComponentAtNode2(node) {
  S(null, node);
}

// node_modules/@fullcalendar/core/main.js
var Calendar = function(_super) {
  __extends(Calendar2, _super);
  function Calendar2(el, optionOverrides) {
    if (optionOverrides === void 0) {
      optionOverrides = {};
    }
    var _this = _super.call(this) || this;
    _this.isRendering = false;
    _this.isRendered = false;
    _this.currentClassNames = [];
    _this.customContentRenderId = 0;
    _this.handleAction = function(action) {
      switch (action.type) {
        case "SET_EVENT_DRAG":
        case "SET_EVENT_RESIZE":
          _this.renderRunner.tryDrain();
      }
    };
    _this.handleData = function(data) {
      _this.currentData = data;
      _this.renderRunner.request(data.calendarOptions.rerenderDelay);
    };
    _this.handleRenderRequest = function() {
      if (_this.isRendering) {
        _this.isRendered = true;
        var currentData_1 = _this.currentData;
        flushSync(function() {
          render(createElement(CalendarRoot, { options: currentData_1.calendarOptions, theme: currentData_1.theme, emitter: currentData_1.emitter }, function(classNames, height, isHeightAuto, forPrint) {
            _this.setClassNames(classNames);
            _this.setHeight(height);
            return createElement(CustomContentRenderContext.Provider, { value: _this.customContentRenderId }, createElement(CalendarContent, __assign({ isHeightAuto, forPrint }, currentData_1)));
          }), _this.el);
        });
      } else if (_this.isRendered) {
        _this.isRendered = false;
        unmountComponentAtNode(_this.el);
        _this.setClassNames([]);
        _this.setHeight("");
      }
    };
    _this.el = el;
    _this.renderRunner = new DelayedRunner(_this.handleRenderRequest);
    new CalendarDataManager({
      optionOverrides,
      calendarApi: _this,
      onAction: _this.handleAction,
      onData: _this.handleData
    });
    return _this;
  }
  Object.defineProperty(Calendar2.prototype, "view", {
    get: function() {
      return this.currentData.viewApi;
    },
    enumerable: false,
    configurable: true
  });
  Calendar2.prototype.render = function() {
    var wasRendering = this.isRendering;
    if (!wasRendering) {
      this.isRendering = true;
    } else {
      this.customContentRenderId += 1;
    }
    this.renderRunner.request();
    if (wasRendering) {
      this.updateSize();
    }
  };
  Calendar2.prototype.destroy = function() {
    if (this.isRendering) {
      this.isRendering = false;
      this.renderRunner.request();
    }
  };
  Calendar2.prototype.updateSize = function() {
    var _this = this;
    flushSync(function() {
      _super.prototype.updateSize.call(_this);
    });
  };
  Calendar2.prototype.batchRendering = function(func) {
    this.renderRunner.pause("batchRendering");
    func();
    this.renderRunner.resume("batchRendering");
  };
  Calendar2.prototype.pauseRendering = function() {
    this.renderRunner.pause("pauseRendering");
  };
  Calendar2.prototype.resumeRendering = function() {
    this.renderRunner.resume("pauseRendering", true);
  };
  Calendar2.prototype.resetOptions = function(optionOverrides, append) {
    this.currentDataManager.resetOptions(optionOverrides, append);
  };
  Calendar2.prototype.setClassNames = function(classNames) {
    if (!isArraysEqual(classNames, this.currentClassNames)) {
      var classList = this.el.classList;
      for (var _i = 0, _a = this.currentClassNames; _i < _a.length; _i++) {
        var className = _a[_i];
        classList.remove(className);
      }
      for (var _b = 0, classNames_1 = classNames; _b < classNames_1.length; _b++) {
        var className = classNames_1[_b];
        classList.add(className);
      }
      this.currentClassNames = classNames;
    }
  };
  Calendar2.prototype.setHeight = function(height) {
    applyStyleProp(this.el, "height", height);
  };
  return Calendar2;
}(CalendarApi);
export {
  BASE_OPTION_DEFAULTS,
  BASE_OPTION_REFINERS,
  BaseComponent,
  BgEvent,
  Calendar,
  CalendarApi,
  CalendarContent,
  CalendarDataManager,
  CalendarDataProvider,
  CalendarRoot,
  Component,
  ContentHook,
  CustomContentRenderContext,
  DateComponent,
  DateEnv,
  DateProfileGenerator,
  DayCellContent,
  DayCellRoot,
  DayHeader,
  DaySeriesModel,
  DayTableModel,
  DelayedRunner,
  ElementDragging,
  ElementScrollController,
  Emitter,
  EventApi,
  EventRoot,
  EventSourceApi,
  Fragment,
  Interaction,
  MoreLinkRoot,
  MountHook,
  NamedTimeZoneImpl,
  NowIndicatorRoot,
  NowTimer,
  PositionCache,
  RefMap,
  RenderHook,
  ScrollController,
  ScrollResponder,
  Scroller,
  SegHierarchy,
  SimpleScrollGrid,
  Slicer,
  Splitter,
  StandardEvent,
  TableDateCell,
  TableDowCell,
  Theme,
  ViewApi,
  ViewContextType,
  ViewRoot,
  WeekNumberRoot,
  WindowScrollController,
  addDays,
  addDurations,
  addMs,
  addWeeks,
  allowContextMenu,
  allowSelection,
  applyMutationToEventStore,
  applyStyle,
  applyStyleProp,
  asCleanDays,
  asRoughMinutes,
  asRoughMs,
  asRoughSeconds,
  binarySearch,
  buildClassNameNormalizer,
  buildEntryKey,
  buildEventApis,
  buildEventRangeKey,
  buildHashFromArray,
  buildIsoString,
  buildNavLinkAttrs,
  buildSegCompareObj,
  buildSegTimeText,
  collectFromHash,
  combineEventUis,
  compareByFieldSpec,
  compareByFieldSpecs,
  compareNumbers,
  compareObjs,
  computeEarliestSegStart,
  computeEdges,
  computeFallbackHeaderFormat,
  computeHeightAndMargins,
  computeInnerRect,
  computeRect,
  computeSegDraggable,
  computeSegEndResizable,
  computeSegStartResizable,
  computeShrinkWidth,
  computeSmallestCellWidth,
  computeVisibleDayRange,
  config,
  constrainPoint,
  createAriaClickAttrs,
  createContext,
  createDuration,
  createElement,
  createEmptyEventStore,
  createEventInstance,
  createEventUi,
  createFormatter,
  createPlugin,
  createPortal,
  createRef,
  diffDates,
  diffDayAndTime,
  diffDays,
  diffPoints,
  diffWeeks,
  diffWholeDays,
  diffWholeWeeks,
  disableCursor,
  elementClosest,
  elementMatches,
  enableCursor,
  eventTupleToStore,
  filterEventStoreDefs,
  filterHash,
  findDirectChildren,
  findElements,
  flexibleCompare,
  flushSync,
  formatDate,
  formatDayString,
  formatIsoTimeString,
  formatRange,
  getAllowYScrolling,
  getCanVGrowWithinCell,
  getClippingParents,
  getDateMeta,
  getDayClassNames,
  getDefaultEventEnd,
  getElRoot,
  getElSeg,
  getEntrySpanEnd,
  getEventClassNames,
  getEventTargetViaRoot,
  getIsRtlScrollbarOnLeft,
  getRectCenter,
  getRelevantEvents,
  getScrollGridClassNames,
  getScrollbarWidths,
  getSectionClassNames,
  getSectionHasLiquidHeight,
  getSegAnchorAttrs,
  getSegMeta,
  getSlotClassNames,
  getStickyFooterScrollbar,
  getStickyHeaderDates,
  getUnequalProps,
  getUniqueDomId,
  globalLocales,
  globalPlugins,
  greatestDurationDenominator,
  groupIntersectingEntries,
  guid,
  hasBgRendering,
  hasShrinkWidth,
  identity,
  interactionSettingsStore,
  interactionSettingsToStore,
  intersectRanges,
  intersectRects,
  intersectSpans,
  isArraysEqual,
  isColPropsEqual,
  isDateSelectionValid,
  isDateSpansEqual,
  isInt,
  isInteractionValid,
  isMultiDayRange,
  isPropsEqual,
  isPropsValid,
  isValidDate,
  joinSpans,
  listenBySelector,
  mapHash,
  memoize,
  memoizeArraylike,
  memoizeHashlike,
  memoizeObjArg,
  mergeEventStores,
  multiplyDuration,
  padStart,
  parseBusinessHours,
  parseClassNames,
  parseDragMeta,
  parseEventDef,
  parseFieldSpecs,
  parse as parseMarker,
  pointInsideRect,
  preventContextMenu,
  preventDefault,
  preventSelection,
  rangeContainsMarker,
  rangeContainsRange,
  rangesEqual,
  rangesIntersect,
  refineEventDef,
  refineProps,
  removeElement,
  removeExact,
  render,
  renderChunkContent,
  renderFill,
  renderMicroColGroup,
  renderScrollShim,
  requestJson,
  sanitizeShrinkWidth,
  setElSeg,
  setRef,
  sliceEventStore,
  sliceEvents,
  sortEventSegs,
  startOfDay,
  translateRect,
  triggerDateSelect,
  unmountComponentAtNode,
  unpromisify,
  version,
  whenTransitionDone,
  wholeDivideDurations
};
/*!
FullCalendar v5.10.2
Docs & License: https://fullcalendar.io/
(c) 2021 Adam Shaw
*/
//# sourceMappingURL=@fullcalendar_core.js.map
